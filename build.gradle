buildscript {
  repositories {
    maven { url = 'https://files.minecraftforge.net/maven' }
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
  }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'mod.reborn'
archivesBaseName = 'rebornmod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
  mappings channel: 'snapshot', version: '20201028-1.16.3'
  runs {
    client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'
      mods {
        rebornmod {
          source sourceSets.main
        }
      }
    }

    server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'
      mods {
        rebornmod {
          source sourceSets.main
        }
      }
    }

    data {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'
      args '--mod', 'rebornmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
      mods {
        rebornmod {
          source sourceSets.main
        }
      }
    }
  }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
  minecraft 'net.minecraftforge:forge:1.16.4-35.1.37'

}

jar {
  manifest {
    attributes([
            "Specification-Title": "rebornmod",
            "Specification-Vendor": "RebornTeam",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"RebornTeam",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}

jar.finalizedBy('reobfJar')